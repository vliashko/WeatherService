// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WeatherService.API.Infrastructure;

namespace WeatherService.API.Migrations
{
    [DbContext(typeof(RepositoryDbContext))]
    partial class RepositoryDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WeatherService.API.Models.City", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4848914d-89a5-4fa9-adec-a87bdb1242d0"),
                            Name = "Minsk"
                        },
                        new
                        {
                            Id = new Guid("915ccda2-9d44-425e-87fb-bd370b40925e"),
                            Name = "Gomel"
                        },
                        new
                        {
                            Id = new Guid("579a4438-c200-4f73-a250-3598099a8dc1"),
                            Name = "Vitebsk"
                        },
                        new
                        {
                            Id = new Guid("2f1f200f-2e4c-4a85-bb81-beb5aad73a95"),
                            Name = "Grodno"
                        },
                        new
                        {
                            Id = new Guid("8f5fb81d-cc18-4014-beae-756543e07596"),
                            Name = "Mogilev"
                        },
                        new
                        {
                            Id = new Guid("d1e4e028-55d2-42b0-bb3a-c49e50ee30e2"),
                            Name = "Brest"
                        });
                });

            modelBuilder.Entity("WeatherService.API.Models.Weather", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Summary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TemperatureC")
                        .HasColumnType("int");

                    b.Property<int>("TemperatureF")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Weathers");
                });

            modelBuilder.Entity("WeatherService.API.Models.Weather", b =>
                {
                    b.HasOne("WeatherService.API.Models.City", "City")
                        .WithMany("Weathers")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("WeatherService.API.Models.City", b =>
                {
                    b.Navigation("Weathers");
                });
#pragma warning restore 612, 618
        }
    }
}
